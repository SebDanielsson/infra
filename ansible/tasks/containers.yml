---
- name: Create network medianet
  community.docker.docker_network:
    name: medianet
    driver: overlay
    attachable: true
    state: present

- name: Create network plausible_network
  community.docker.docker_network:
    name: plausible_network
    driver: overlay
    attachable: true
    state: present

- name: Create network proxy
  community.docker.docker_network:
    name: proxy
    driver: overlay
    attachable: true
    state: present

- name: Create volume traefik_acme
  community.docker.docker_volume:
    name: traefik_acme
    driver: local
    state: present

- name: Deploy Traefik
  community.docker.docker_compose_v2:
    project_src: /docker/traefik
    pull: always
    state: present
  environment:
    CF_DNS_API_TOKEN: "{{ lookup('community.general.onepassword', 'docker-traefik', field='cf_dns_api_token', vault='prod', service_account_token=service_account_token) }}"

- name: Deploy Watchtower
  community.docker.docker_compose_v2:
    project_src: /docker/watchtower
    pull: always
    state: present

- name: Deploy tsrecorder
  community.docker.docker_compose_v2:
    project_src: /docker/tsrecorder
    pull: always
    state: present
  environment:
    TSRECORDER_AUTHKEY: "{{ lookup('community.general.onepassword', 'ts-authkey-recorder', field='credential', vault='prod', service_account_token=service_account_token) }}"

- name: Deploy homepage
  community.docker.docker_compose_v2:
    project_src: /docker/homepage
    pull: always
    state: present

- name: Deploy Portainer
  community.docker.docker_stack:
    name: portainer
    compose:
      - /docker/portainer/compose.yaml
    state: present

- name: Deploy Radarr
  community.docker.docker_compose_v2:
    project_src: /docker/radarr
    pull: always
    state: present

- name: Deploy Sonarr
  community.docker.docker_compose_v2:
    project_src: /docker/sonarr
    pull: always
    state: present

- name: Deploy Prowlarr
  community.docker.docker_compose_v2:
    project_src: /docker/prowlarr
    pull: always
    state: present

- name: Deploy Jellyfin
  community.docker.docker_compose_v2:
    project_src: /docker/jellyfin
    pull: always
    state: present

- name: Deploy Jellystat
  community.docker.docker_compose_v2:
    project_src: /docker/jellystat
    pull: always
    state: present
  environment:
    JELLYSTAT_JWT_SECRET: "{{ lookup('community.general.onepassword', 'docker-jellystat', field='JWT', vault='prod', service_account_token=service_account_token) }}"
    JELLYSTAT_POSTGRES_USER: "{{ lookup('community.general.onepassword', 'docker-jellystat', field='POSTGRES_USER', vault='prod', service_account_token=service_account_token) }}"
    JELLYSTAT_POSTGRES_PASSWORD: "{{ lookup('community.general.onepassword', 'docker-jellystat', field='POSTGRES_PASSWORD', vault='prod', service_account_token=service_account_token) }}"

- name: Add wireguard secrets
  ansible.builtin.template:
    src: ../../docker/transmission-wireguard/wg0.conf.j2
    dest: /docker/transmission-wireguard/wg0.conf
  vars:
    private_key: "{{ lookup('community.general.onepassword', 'wg0', field='private_key', vault='prod', service_account_token=service_account_token) }}"
    public_key: "{{ lookup('community.general.onepassword', 'wg0', field='public_key', vault='prod', service_account_token=service_account_token) }}"
    endpoint: "{{ lookup('community.general.onepassword', 'wg0', field='endpoint', vault='prod', service_account_token=service_account_token) }}"

- name: Add transmission secrets
  ansible.builtin.template:
    src: ../../docker/transmission-wireguard/secrets.env.j2
    dest: /docker/transmission-wireguard/secrets.env
  vars:
    transmission_user: "{{ lookup('community.general.onepassword', 'docker-transmission', field='transmission_user', vault='prod', service_account_token=service_account_token) }}"
    transmission_pass: "{{ lookup('community.general.onepassword', 'docker-transmission', field='transmission_pass', vault='prod', service_account_token=service_account_token) }}"

- name: Deploy transmission-wireguard
  community.docker.docker_compose_v2:
    project_src: /docker/transmission-wireguard
    pull: always
    state: present

- name: Deploy Ombi
  community.docker.docker_compose_v2:
    project_src: /docker/ombi
    pull: always
    state: present

- name: Deploy open-webui
  community.docker.docker_compose_v2:
    project_src: /docker/open-webui
    pull: always
    state: present
  environment:
    OLLAMA_BASE_URL: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OLLAMA_BASE_URL', vault='prod', service_account_token=service_account_token) }}"
    OPENAI_API_BASE_URL: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OPENAI_API_BASE_URL', vault='prod', service_account_token=service_account_token) }}"
    OPENAI_API_KEY: "{{ lookup('community.general.onepassword', 'docker-open-webui', field='OPENAI_API_KEY', vault='prod', service_account_token=service_account_token) }}"

- name: Create secret plausible_postgres_password
  community.docker.docker_secret:
    name: plausible_postgres_password
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_postgres_password', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_base_url
  community.docker.docker_secret:
    name: plausible_base_url
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_base_url', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_secret_key_base
  community.docker.docker_secret:
    name: plausible_secret_key_base
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_secret_key_base', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_totp_vault_key
  community.docker.docker_secret:
    name: plausible_totp_vault_key
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_totp_vault_key', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_maxmind_license_key
  community.docker.docker_secret:
    name: plausible_maxmind_license_key
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_maxmind_license_key', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_google_client_id
  community.docker.docker_secret:
    name: plausible_google_client_id
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_google_client_id', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_google_client_secret
  community.docker.docker_secret:
    name: plausible_google_client_secret
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_google_client_secret', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_mailgun_api_key
  community.docker.docker_secret:
    name: plausible_mailgun_api_key
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_mailgun_api_key', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Create secret plausible_mailgun_domain
  community.docker.docker_secret:
    name: plausible_mailgun_domain
    data: "{{ lookup('community.general.onepassword', 'docker-plausible', field='plausible_mailgun_domain', vault='prod', service_account_token=service_account_token) }}"
    state: present

- name: Deploy Plausible
  community.docker.docker_stack:
    name: plausible
    compose:
      - /docker/plausible/compose.yaml
    state: present
