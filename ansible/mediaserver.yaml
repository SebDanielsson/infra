- name: Mediaserver setup
  hosts: mediaserver

  pre_tasks:
    - name: Set SELinux to permissive
      ansible.posix.selinux:
        policy: targeted
        state: permissive

  roles:
    - name: Install and configure Tailscale
      role: artis3n.tailscale
      tailscale_args: "--ssh"
      vars:
        tailscale_authkey: "{{ lookup('community.general.onepassword', 'ts-authkey-server', field='credential', vault='Private') }}"

    - name: Install Docker
      role: geerlingguy.docker
      vars:
        docker_edition: ce
        docker_packages_state: present
        docker_install_compose_plugin: true
        docker_compose_package: docker-compose-plugin
        docker_compose_package_state: present
        docker_install_compose: false
        docker_users:
          - sebastian
        docker_service_manage: true
        docker_service_state: started
        docker_service_enabled: true
        docker_restart_handler_state: restarted

  tasks:
    - name: Set hostname
      ansible.builtin.hostname:
        name: mediaserver
        use: systemd

    - name: Ensure 'sebastian' user exists
      ansible.builtin.user:
        name: sebastian
        shell: /bin/bash
        group: sebastian
        groups: wheel,docker
        append: true
        state: present

    - name: SSH authorized key for 'sebastian'
      ansible.posix.authorized_key:
        user: sebastian
        key: "{{ lookup('community.general.onepassword', 'Sebastian SSH Key', field='public key', vault='Private') }}"
        state: present

    - name: Upgrade all packages # noqa package-latest
      ansible.builtin.dnf:
        name: "*"
        state: latest

    - name: Install misc packages
      ansible.builtin.dnf:
        name:
          - wget
        state: present

    - name: Add cloudflared repository
      ansible.builtin.yum_repository:
        name: cloudflared-stable
        description: cloudflared-stable repository
        baseurl: https://pkg.cloudflare.com/cloudflared/rpm
        gpgcheck: true
        gpgkey: https://pkg.cloudflare.com/cloudflare-ascii-pubkey.gpg
        state: present

    - name: Install cloudflared
      ansible.builtin.dnf:
        name: cloudflared
        state: present

    - name: Install nfs-utils
      ansible.builtin.dnf:
        name: nfs-utils
        state: present

    - name: Enable 'cloudflared' service
      ansible.builtin.command:
        cmd: cloudflared service install {{ lookup('community.general.onepassword', 'cf-tunnel-hogsmeade-mediaserver', field='credential', vault='Private') }}
        creates: /etc/systemd/system/cloudflared.service

    - name: Mount media share
      ansible.posix.mount:
        src: 192.168.1.116:/chungus/media
        path: /mnt/media
        fstype: nfs
        opts: defaults
        dump: 0
        passno: 0
        state: mounted

    - name: Install pip
      ansible.builtin.dnf:
        name: python3-pip
        state: present

    - name: Add community.docker.docker_compose dependencies
      ansible.builtin.pip:
        name:
          - pyyaml
          - docker
          - docker-compose
        state: present

    - name: Add Portainer compose file
      community.docker.docker_compose:
        project_name: portainer
        definition:
          services:
            portainer:
              container_name: portainer
              image: portainer/portainer-ee:2.16.2-alpine
              volumes:
                - "/var/run/docker.sock:/var/run/docker.sock"
                - "portainer:/data"
              ports:
                - "8000:8000"
                - "9443:9443"
              restart: always
          volumes:
            portainer:
              name: portainer
      register: output
